openapi: 3.0.2
info:
  title: 'Wallet Component'
  version: V1.0
  description: |
    API Details
    - Component: Wallet Component
    - Reference: wac
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/wallet-component) / [zip](https://github.com/ConductionNL/wallet-component/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/wac-php) 
    - Datamodel: [postman](schema/wac.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[authorizationUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[webhookUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[singleSignOnUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[secret]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[testSecret]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[notificationEndpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[scopes]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sendLists]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[gdprContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[technicalContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[privacyContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[billingContact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[mailgunApiKey]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[mailgunDomain]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[messageBirdApiKey]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: secret
          in: query
          required: false
          schema:
            type: string
        -
          name: 'secret[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}/audit_trail':
    get:
      tags:
        - Application
      operationId: get_audit_trailApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/applications/{id}/change_log':
    get:
      tags:
        - Application
      operationId: get_change_logsApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /authorization_logs:
    get:
      tags:
        - AuthorizationLog
      operationId: getAuthorizationLogCollection
      summary: 'Retrieves the collection of AuthorizationLog resources.'
      responses:
        200:
          description: 'AuthorizationLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuthorizationLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuthorizationLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthorizationLog-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[goal]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: authorization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'authorization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: authorization.userUrl
          in: query
          required: false
          schema:
            type: string
        -
          name: 'authorization.userUrl[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuthorizationLog
      operationId: postAuthorizationLogCollection
      summary: 'Creates a AuthorizationLog resource.'
      responses:
        201:
          description: 'AuthorizationLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
          links:
            GetAuthorizationLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuthorizationLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /authorization_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
        description: 'The new AuthorizationLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/authorization_logs/{id}':
    get:
      tags:
        - AuthorizationLog
      operationId: getAuthorizationLogItem
      summary: 'Retrieves a AuthorizationLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuthorizationLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuthorizationLog
      operationId: deleteAuthorizationLogItem
      summary: 'Removes the AuthorizationLog resource.'
      responses:
        204:
          description: 'AuthorizationLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuthorizationLog
      operationId: putAuthorizationLogItem
      summary: 'Replaces the AuthorizationLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuthorizationLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
        description: 'The updated AuthorizationLog resource'
    patch:
      tags:
        - AuthorizationLog
      operationId: patchAuthorizationLogItem
      summary: 'Updates the AuthorizationLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuthorizationLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuthorizationLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuthorizationLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuthorizationLog-write'
        description: 'The updated AuthorizationLog resource'
  /authorizations:
    get:
      tags:
        - Authorization
      operationId: getAuthorizationCollection
      summary: 'Retrieves the collection of Authorization resources.'
      responses:
        200:
          description: 'Authorization collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Authorization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Authorization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authorization-read'
      parameters:
        -
          name: newUser
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[userUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[newUser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[scopes]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[code]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[goal]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[startingDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'startingDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startingDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startingDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'startingDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: userUrl
          in: query
          required: false
          schema:
            type: string
        -
          name: 'userUrl[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: code
          in: query
          required: false
          schema:
            type: string
        -
          name: 'code[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Authorization
      operationId: postAuthorizationCollection
      summary: 'Creates a Authorization resource.'
      responses:
        201:
          description: 'Authorization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Authorization-read'
          links:
            GetAuthorizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuthorizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /authorizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Authorization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Authorization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Authorization-write'
        description: 'The new Authorization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/authorizations/{id}':
    get:
      tags:
        - Authorization
      operationId: getAuthorizationItem
      summary: 'Retrieves a Authorization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Authorization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Authorization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Authorization
      operationId: deleteAuthorizationItem
      summary: 'Removes the Authorization resource.'
      responses:
        204:
          description: 'Authorization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Authorization
      operationId: putAuthorizationItem
      summary: 'Replaces the Authorization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Authorization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Authorization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Authorization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Authorization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Authorization-write'
        description: 'The updated Authorization resource'
    patch:
      tags:
        - Authorization
      operationId: patchAuthorizationItem
      summary: 'Updates the Authorization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Authorization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Authorization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Authorization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Authorization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Authorization:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Authorization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Authorization-write'
        description: 'The updated Authorization resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /claims:
    get:
      tags:
        - Claim
      operationId: getClaimCollection
      summary: 'Retrieves the collection of Claim resources.'
      responses:
        200:
          description: 'Claim collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Claim:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Claim:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[property]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[data]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[token]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: person
          in: query
          required: false
          schema:
            type: string
        -
          name: property
          in: query
          required: false
          schema:
            type: string
        -
          name: 'property[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Claim
      operationId: postClaimCollection
      summary: 'Creates a Claim resource.'
      responses:
        201:
          description: 'Claim resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Claim-read'
          links:
            GetClaimItem:
              parameters:
                id: '$response.body#/id'
              operationId: getClaimItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /claims/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Claim:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Claim:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Claim-write'
        description: 'The new Claim resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/claims/{id}':
    get:
      tags:
        - Claim
      operationId: getClaimItem
      summary: 'Retrieves a Claim resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Claim resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Claim-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Claim
      operationId: deleteClaimItem
      summary: 'Removes the Claim resource.'
      responses:
        204:
          description: 'Claim resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Claim
      operationId: putClaimItem
      summary: 'Replaces the Claim resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Claim resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Claim-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Claim:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Claim:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Claim-write'
        description: 'The updated Claim resource'
    patch:
      tags:
        - Claim
      operationId: patchClaimItem
      summary: 'Updates the Claim resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Claim resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Claim:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Claim-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Claim-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Claim:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Claim-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Claim-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Claim-write'
        description: 'The updated Claim resource'
  /contracts:
    get:
      tags:
        - Contract
      operationId: getContractCollection
      summary: 'Retrieves the collection of Contract resources.'
      responses:
        200:
          description: 'Contract collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Contract:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Contract:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[signed]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[expiryDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[noticePeriod]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'expiryDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Contract
      operationId: postContractCollection
      summary: 'Creates a Contract resource.'
      responses:
        201:
          description: 'Contract resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
          links:
            GetContractItem:
              parameters:
                id: '$response.body#/id'
              operationId: getContractItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /contracts/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Contract:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Contract:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Contract-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Contract-write'
        description: 'The new Contract resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/contracts/{id}':
    get:
      tags:
        - Contract
      operationId: getContractItem
      summary: 'Retrieves a Contract resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Contract resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/contracts/{id}/audit_trail':
    get:
      tags:
        - Contract
      operationId: get_audit_trailContractItem
      summary: 'Retrieves a Contract resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Contract resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/contracts/{id}/change_log':
    get:
      tags:
        - Contract
      operationId: get_change_logsContractItem
      summary: 'Retrieves a Contract resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Contract resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Contract:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Contract-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Contract-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /dossiers:
    get:
      tags:
        - Dossier
      operationId: getDossierCollection
      summary: 'Retrieves the collection of Dossier resources.'
      responses:
        200:
          description: 'Dossier collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Dossier:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Dossier:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dossier-read'
      parameters:
        -
          name: legal
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[goal]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[expiryDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[sso]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[legal]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[scopes]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'expiryDate[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryDate[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: authorization.userUrl
          in: query
          required: false
          schema:
            type: string
        -
          name: 'authorization.userUrl[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Dossier
      operationId: postDossierCollection
      summary: 'Creates a Dossier resource.'
      responses:
        201:
          description: 'Dossier resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
          links:
            GetDossierItem:
              parameters:
                id: '$response.body#/id'
              operationId: getDossierItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /dossiers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The new Dossier resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/dossiers/{id}':
    get:
      tags:
        - Dossier
      operationId: getDossierItem
      summary: 'Retrieves a Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Dossier resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Dossier
      operationId: deleteDossierItem
      summary: 'Removes the Dossier resource.'
      responses:
        204:
          description: 'Dossier resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Dossier
      operationId: putDossierItem
      summary: 'Replaces the Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Dossier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The updated Dossier resource'
    patch:
      tags:
        - Dossier
      operationId: patchDossierItem
      summary: 'Updates the Dossier resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Dossier resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Dossier:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Dossier-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Dossier-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Dossier:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Dossier-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Dossier-write'
        description: 'The updated Dossier resource'
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[organization]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}/audit_trail':
    get:
      tags:
        - Group
      operationId: get_audit_trailGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/groups/{id}/change_log':
    get:
      tags:
        - Group
      operationId: get_change_logsGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /memberships:
    get:
      tags:
        - Membership
      operationId: getMembershipCollection
      summary: 'Retrieves the collection of Membership resources.'
      responses:
        200:
          description: 'Membership collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Membership:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Membership:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[userUrl]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateInvited]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateAcceptedGroup]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateAcceptedUser]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateInvited[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateInvited[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedGroup[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedGroup[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedGroup[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedGroup[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAcceptedUser[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: userUrl
          in: query
          required: false
          schema:
            type: string
        -
          name: 'userUrl[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Membership
      operationId: postMembershipCollection
      summary: 'Creates a Membership resource.'
      responses:
        201:
          description: 'Membership resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Membership-read'
          links:
            GetMembershipItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMembershipItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /memberships/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Membership:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Membership:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Membership-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Membership-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Membership-write'
        description: 'The new Membership resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/memberships/{id}':
    get:
      tags:
        - Membership
      operationId: getMembershipItem
      summary: 'Retrieves a Membership resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Membership resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Membership-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Membership
      operationId: putMembershipItem
      summary: 'Replaces the Membership resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Membership resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Membership-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Membership:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Membership:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Membership-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Membership-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Membership-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Membership-write'
        description: 'The updated Membership resource'
    delete:
      tags:
        - Membership
      operationId: deleteMembershipItem
      summary: 'Removes the Membership resource.'
      responses:
        204:
          description: 'Membership resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/memberships/{id}/audit_trail':
    get:
      tags:
        - Membership
      operationId: get_audit_trailMembershipItem
      summary: 'Retrieves a Membership resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Membership resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Membership-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/memberships/{id}/change_log':
    get:
      tags:
        - Membership
      operationId: get_change_logsMembershipItem
      summary: 'Retrieves a Membership resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Membership resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Membership:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Membership-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Membership-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /proofs:
    get:
      tags:
        - Proof
      operationId: getProofCollection
      summary: 'Retrieves the collection of Proof resources.'
      responses:
        200:
          description: 'Proof collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Proof:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Proof:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proof-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[proofPurpose]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[verificationMethod]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[jws]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: claim.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'claim.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Proof
      operationId: postProofCollection
      summary: 'Creates a Proof resource.'
      responses:
        201:
          description: 'Proof resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proof-read'
          links:
            GetProofItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProofItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /proofs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Proof:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Proof:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Proof-write'
        description: 'The new Proof resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/proofs/{id}':
    get:
      tags:
        - Proof
      operationId: getProofItem
      summary: 'Retrieves a Proof resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Proof resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proof-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Proof
      operationId: deleteProofItem
      summary: 'Removes the Proof resource.'
      responses:
        204:
          description: 'Proof resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Proof
      operationId: putProofItem
      summary: 'Replaces the Proof resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Proof resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proof-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Proof:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Proof:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Proof-write'
        description: 'The updated Proof resource'
    patch:
      tags:
        - Proof
      operationId: patchProofItem
      summary: 'Updates the Proof resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Proof resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Proof:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Proof-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Proof-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Proof:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Proof-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Proof-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Proof-write'
        description: 'The updated Proof resource'
  /purpose_limitations:
    get:
      tags:
        - PurposeLimitation
      operationId: getPurposeLimitationCollection
      summary: 'Retrieves the collection of PurposeLimitation resources.'
      responses:
        200:
          description: 'PurposeLimitation collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PurposeLimitation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/PurposeLimitation:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurposeLimitation-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[data]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[noticePeriod]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[expiryPeriod]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: data
          in: query
          required: false
          schema:
            type: string
        -
          name: 'data[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: noticePeriod
          in: query
          required: false
          schema:
            type: string
        -
          name: 'noticePeriod[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: expiryPeriod
          in: query
          required: false
          schema:
            type: string
        -
          name: 'expiryPeriod[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - PurposeLimitation
      operationId: postPurposeLimitationCollection
      summary: 'Creates a PurposeLimitation resource.'
      responses:
        201:
          description: 'PurposeLimitation resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
          links:
            GetPurposeLimitationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPurposeLimitationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /purpose_limitations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
        description: 'The new PurposeLimitation resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/purpose_limitations/{id}':
    get:
      tags:
        - PurposeLimitation
      operationId: getPurposeLimitationItem
      summary: 'Retrieves a PurposeLimitation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'PurposeLimitation resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - PurposeLimitation
      operationId: deletePurposeLimitationItem
      summary: 'Removes the PurposeLimitation resource.'
      responses:
        204:
          description: 'PurposeLimitation resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - PurposeLimitation
      operationId: putPurposeLimitationItem
      summary: 'Replaces the PurposeLimitation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PurposeLimitation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
        description: 'The updated PurposeLimitation resource'
    patch:
      tags:
        - PurposeLimitation
      operationId: patchPurposeLimitationItem
      summary: 'Updates the PurposeLimitation resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'PurposeLimitation resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/PurposeLimitation:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
            text/html:
              schema:
                $ref: '#/components/schemas/PurposeLimitation-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
          text/html:
            schema:
              $ref: '#/components/schemas/PurposeLimitation-write'
        description: 'The updated PurposeLimitation resource'
  /scope_requests:
    get:
      tags:
        - ScopeRequest
      operationId: getScopeRequestCollection
      summary: 'Retrieves the collection of ScopeRequest resources.'
      responses:
        200:
          description: 'ScopeRequest collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ScopeRequest:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ScopeRequest:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScopeRequest-read'
      parameters:
        -
          name: authorized
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[scopes]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[authorized]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateAuthorized]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateAuthorized[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAuthorized[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAuthorized[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateAuthorized[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: authorization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'authorization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: authorized
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'authorized[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ScopeRequest
      operationId: postScopeRequestCollection
      summary: 'Creates a ScopeRequest resource.'
      responses:
        201:
          description: 'ScopeRequest resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
          links:
            GetScopeRequestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getScopeRequestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /scope_requests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ScopeRequest:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
        description: 'The new ScopeRequest resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/scope_requests/{id}':
    get:
      tags:
        - ScopeRequest
      operationId: getScopeRequestItem
      summary: 'Retrieves a ScopeRequest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ScopeRequest resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ScopeRequest
      operationId: deleteScopeRequestItem
      summary: 'Removes the ScopeRequest resource.'
      responses:
        204:
          description: 'ScopeRequest resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ScopeRequest
      operationId: putScopeRequestItem
      summary: 'Replaces the ScopeRequest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ScopeRequest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ScopeRequest:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
        description: 'The updated ScopeRequest resource'
    patch:
      tags:
        - ScopeRequest
      operationId: patchScopeRequestItem
      summary: 'Updates the ScopeRequest resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ScopeRequest resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ScopeRequest:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ScopeRequest-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ScopeRequest-write'
        description: 'The updated ScopeRequest resource'
components:
  schemas:
    Application-read:
      type: object
      description: 'An entity representing an node.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this application'
          type: string
        authorizationUrl:
          description: 'authorization url of the application'
          type: string
          nullable: true
        webhookUrl:
          description: 'webhook url of the application'
          type: string
          nullable: true
        singleSignOnUrl:
          description: 'single sign on url of the application'
          type: string
          nullable: true
        secret:
          description: 'Random generated secret for the application'
          type: string
          nullable: true
        testSecret:
          description: 'Random generated secret for the application'
          type: string
          nullable: true
        description:
          description: 'description of this application'
          type: string
          nullable: true
        organization:
          description: 'The organization this application belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        contact:
          description: 'The wrc application linked to this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        notificationEndpoint:
          description: 'The endpoint of this application.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
        sendLists:
          type: array
          items:
            type: string
        gdprContact:
          description: 'The gdprContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        technicalContact:
          description: 'The technicalContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        privacyContact:
          description: 'The privacyContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        billingContact:
          description: 'The billingContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mailgunApiKey:
          description: 'The mailgun api key of this application'
          type: string
          nullable: true
        mailgunDomain:
          description: 'The mailgun domain of this application'
          type: string
          nullable: true
        messageBirdApiKey:
          description: 'The messageBird api key of this application'
          type: string
          nullable: true
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof-read'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
        - contact
    Application-write:
      type: object
      description: 'An entity representing an node.'
      required:
        - name
        - organization
        - contact
      properties:
        name:
          description: 'Name of this application'
          type: string
        authorizationUrl:
          description: 'authorization url of the application'
          type: string
          nullable: true
        webhookUrl:
          description: 'webhook url of the application'
          type: string
          nullable: true
        singleSignOnUrl:
          description: 'single sign on url of the application'
          type: string
          nullable: true
        description:
          description: 'description of this application'
          type: string
          nullable: true
        organization:
          description: 'The organization this application belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        contact:
          description: 'The wrc application linked to this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        notificationEndpoint:
          description: 'The endpoint of this application.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
        sendLists:
          type: array
          items:
            type: string
        gdprContact:
          description: 'The gdprContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        technicalContact:
          description: 'The technicalContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        privacyContact:
          description: 'The privacyContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        billingContact:
          description: 'The billingContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mailgunApiKey:
          description: 'The mailgun api key of this application'
          type: string
          nullable: true
        mailgunDomain:
          description: 'The mailgun domain of this application'
          type: string
          nullable: true
        messageBirdApiKey:
          description: 'The messageBird api key of this application'
          type: string
          nullable: true
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof-write'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
    'Application:jsonld-read':
      type: object
      description: 'An entity representing an node.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this application'
          type: string
        authorizationUrl:
          description: 'authorization url of the application'
          type: string
          nullable: true
        webhookUrl:
          description: 'webhook url of the application'
          type: string
          nullable: true
        singleSignOnUrl:
          description: 'single sign on url of the application'
          type: string
          nullable: true
        secret:
          description: 'Random generated secret for the application'
          type: string
          nullable: true
        testSecret:
          description: 'Random generated secret for the application'
          type: string
          nullable: true
        description:
          description: 'description of this application'
          type: string
          nullable: true
        organization:
          description: 'The organization this application belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        contact:
          description: 'The wrc application linked to this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        notificationEndpoint:
          description: 'The endpoint of this application.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
        sendLists:
          type: array
          items:
            type: string
        gdprContact:
          description: 'The gdprContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        technicalContact:
          description: 'The technicalContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        privacyContact:
          description: 'The privacyContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        billingContact:
          description: 'The billingContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mailgunApiKey:
          description: 'The mailgun api key of this application'
          type: string
          nullable: true
        mailgunDomain:
          description: 'The mailgun domain of this application'
          type: string
          nullable: true
        messageBirdApiKey:
          description: 'The messageBird api key of this application'
          type: string
          nullable: true
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof:jsonld-read'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - organization
        - contact
    'Application:jsonld-write':
      type: object
      description: 'An entity representing an node.'
      required:
        - name
        - organization
        - contact
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this application'
          type: string
        authorizationUrl:
          description: 'authorization url of the application'
          type: string
          nullable: true
        webhookUrl:
          description: 'webhook url of the application'
          type: string
          nullable: true
        singleSignOnUrl:
          description: 'single sign on url of the application'
          type: string
          nullable: true
        description:
          description: 'description of this application'
          type: string
          nullable: true
        organization:
          description: 'The organization this application belongs to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        contact:
          description: 'The wrc application linked to this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        notificationEndpoint:
          description: 'The endpoint of this application.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        scopes:
          type: array
          items:
            type: string
        sendLists:
          type: array
          items:
            type: string
        gdprContact:
          description: 'The gdprContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        technicalContact:
          description: 'The technicalContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        privacyContact:
          description: 'The privacyContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        billingContact:
          description: 'The billingContact of this application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        mailgunApiKey:
          description: 'The mailgun api key of this application'
          type: string
          nullable: true
        mailgunDomain:
          description: 'The mailgun domain of this application'
          type: string
          nullable: true
        messageBirdApiKey:
          description: 'The messageBird api key of this application'
          type: string
          nullable: true
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof:jsonld-write'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Authorization-read:
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        userUrl:
          description: 'The person who makes his data available.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        newUser:
          description: 'Indicator whether user is new or not'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        code:
          description: 'Random generated code for authorization'
          type: string
          nullable: true
        goal:
          description: 'The goal of this Authorization (what are the data used for).'
          type: string
        application:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Application-read'
        startingDate:
          description: 'The date access was obtained to the data of this authorization'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this authorization was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this authorization was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - goal
        - application
    Authorization-write:
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        userUrl:
          description: 'The person who makes his data available.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        newUser:
          description: 'Indicator whether user is new or not'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        code:
          description: 'Random generated code for authorization'
          type: string
          nullable: true
        goal:
          description: 'The goal of this Authorization (what are the data used for).'
          type: string
        application:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Application-write'
        startingDate:
          description: 'The date access was obtained to the data of this authorization'
          type: string
          format: date-time
          nullable: true
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Claim-write'
        purposeLimitation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PurposeLimitation-write'
        dossiers:
          type: array
          items:
            $ref: '#/components/schemas/Dossier-write'
        scopeRequests:
          type: array
          items:
            $ref: '#/components/schemas/ScopeRequest-write'
        authorizationLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationLog-write'
      required:
        - goal
        - application
    'Authorization:jsonld-read':
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        userUrl:
          description: 'The person who makes his data available.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        newUser:
          description: 'Indicator whether user is new or not'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        code:
          description: 'Random generated code for authorization'
          type: string
          nullable: true
        goal:
          description: 'The goal of this Authorization (what are the data used for).'
          type: string
        application:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Application:jsonld-read'
        startingDate:
          description: 'The date access was obtained to the data of this authorization'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this authorization was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this authorization was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - goal
        - application
    'Authorization:jsonld-write':
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        userUrl:
          description: 'The person who makes his data available.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        newUser:
          description: 'Indicator whether user is new or not'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
        code:
          description: 'Random generated code for authorization'
          type: string
          nullable: true
        goal:
          description: 'The goal of this Authorization (what are the data used for).'
          type: string
        application:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Application:jsonld-write'
        startingDate:
          description: 'The date access was obtained to the data of this authorization'
          type: string
          format: date-time
          nullable: true
        claims:
          type: array
          items:
            $ref: '#/components/schemas/Claim:jsonld-write'
        purposeLimitation:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/PurposeLimitation:jsonld-write'
        dossiers:
          type: array
          items:
            $ref: '#/components/schemas/Dossier:jsonld-write'
        scopeRequests:
          type: array
          items:
            $ref: '#/components/schemas/ScopeRequest:jsonld-write'
        authorizationLogs:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationLog:jsonld-write'
      required:
        - goal
        - application
    AuthorizationLog-read:
      type: object
      description: 'An entity representing an node.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        status:
          description: 'status of the authorization log'
          type: string
        goal:
          description: 'goal of the request'
          type: string
          nullable: true
        endpoint:
          description: 'the endpoint used to obtain the information'
          type: string
        authorization:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Authorization-read'
        dateCreated:
          description: 'The moment this contract was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this contract was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - status
        - endpoint
        - authorization
    AuthorizationLog-write:
      type: object
      description: 'An entity representing an node.'
      required:
        - status
        - endpoint
        - authorization
      properties:
        status:
          description: 'status of the authorization log'
          type: string
        goal:
          description: 'goal of the request'
          type: string
          nullable: true
        endpoint:
          description: 'the endpoint used to obtain the information'
          type: string
        authorization:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Authorization-write'
    'AuthorizationLog:jsonld-read':
      type: object
      description: 'An entity representing an node.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        status:
          description: 'status of the authorization log'
          type: string
        goal:
          description: 'goal of the request'
          type: string
          nullable: true
        endpoint:
          description: 'the endpoint used to obtain the information'
          type: string
        authorization:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Authorization:jsonld-read'
        dateCreated:
          description: 'The moment this contract was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this contract was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - status
        - endpoint
        - authorization
    'AuthorizationLog:jsonld-write':
      type: object
      description: 'An entity representing an node.'
      required:
        - status
        - endpoint
        - authorization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        status:
          description: 'status of the authorization log'
          type: string
        goal:
          description: 'goal of the request'
          type: string
          nullable: true
        endpoint:
          description: 'the endpoint used to obtain the information'
          type: string
        authorization:
          description: 'The node where this checkin takes place'
          $ref: '#/components/schemas/Authorization:jsonld-write'
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Claim-read:
      type: object
      description: 'Claim is a statement about a Subject (person).'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The person (Subject) of this Claim.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        property:
          description: 'The property of this Claim.'
          type: string
        data:
          description: 'The data (Value) of this Claim.'
          type: array
          items:
            type: string
        token:
          description: 'The jwt token of this Claim.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this claim was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this claim was last Modified'
          type: string
          format: date-time
          nullable: true
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization-read'
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof-read'
      required:
        - person
        - property
        - data
    Claim-write:
      type: object
      description: 'Claim is a statement about a Subject (person).'
      required:
        - person
        - property
        - data
      properties:
        person:
          description: 'The person (Subject) of this Claim.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        property:
          description: 'The property of this Claim.'
          type: string
        data:
          description: 'The data (Value) of this Claim.'
          type: array
          items:
            type: string
        token:
          description: 'The jwt token of this Claim.'
          type: string
          nullable: true
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization-write'
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof-write'
    'Claim:jsonld-read':
      type: object
      description: 'Claim is a statement about a Subject (person).'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The person (Subject) of this Claim.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        property:
          description: 'The property of this Claim.'
          type: string
        data:
          description: 'The data (Value) of this Claim.'
          type: array
          items:
            type: string
        token:
          description: 'The jwt token of this Claim.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this claim was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this claim was last Modified'
          type: string
          format: date-time
          nullable: true
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization:jsonld-read'
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof:jsonld-read'
      required:
        - person
        - property
        - data
    'Claim:jsonld-write':
      type: object
      description: 'Claim is a statement about a Subject (person).'
      required:
        - person
        - property
        - data
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'The person (Subject) of this Claim.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        property:
          description: 'The property of this Claim.'
          type: string
        data:
          description: 'The data (Value) of this Claim.'
          type: array
          items:
            type: string
        token:
          description: 'The jwt token of this Claim.'
          type: string
          nullable: true
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/Authorization:jsonld-write'
        proofs:
          type: array
          items:
            $ref: '#/components/schemas/Proof:jsonld-write'
    Contract-read:
      type: object
      description: 'An entity representing an node.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this contract'
          type: string
        description:
          description: 'The description of the contract'
          type: string
          nullable: true
        signed:
          description: 'Denotes if the contract is signed'
          type: boolean
        expiryDate:
          description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
          type: string
          format: date-time
          nullable: true
        noticePeriod:
          description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
          type: string
          format: duration
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        signees:
          description: 'The signees of the contract'
          type: array
          items:
            $ref: '#/components/schemas/Signee-read'
      required:
        - name
        - signed
    Contract-write:
      type: object
      description: 'An entity representing an node.'
      required:
        - name
        - signed
      properties:
        name:
          description: 'Name of this contract'
          type: string
        description:
          description: 'The description of the contract'
          type: string
          nullable: true
        signed:
          description: 'Denotes if the contract is signed'
          type: boolean
        expiryDate:
          description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
          type: string
          format: date-time
          nullable: true
        noticePeriod:
          description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
          type: string
          format: duration
          nullable: true
        signees:
          description: 'The signees of the contract'
          type: array
          items:
            $ref: '#/components/schemas/Signee-write'
    'Contract:jsonld-read':
      type: object
      description: 'An entity representing an node.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this contract'
          type: string
        description:
          description: 'The description of the contract'
          type: string
          nullable: true
        signed:
          description: 'Denotes if the contract is signed'
          type: boolean
        expiryDate:
          description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
          type: string
          format: date-time
          nullable: true
        noticePeriod:
          description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
          type: string
          format: duration
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        signees:
          description: 'The signees of the contract'
          type: array
          items:
            $ref: '#/components/schemas/Signee:jsonld-read'
      required:
        - name
        - signed
    'Contract:jsonld-write':
      type: object
      description: 'An entity representing an node.'
      required:
        - name
        - signed
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this contract'
          type: string
        description:
          description: 'The description of the contract'
          type: string
          nullable: true
        signed:
          description: 'Denotes if the contract is signed'
          type: boolean
        expiryDate:
          description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
          type: string
          format: date-time
          nullable: true
        noticePeriod:
          description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
          type: string
          format: duration
          nullable: true
        signees:
          description: 'The signees of the contract'
          type: array
          items:
            $ref: '#/components/schemas/Signee:jsonld-write'
    Dossier-read:
      type: object
      description: 'Dossier is a external data set that is blocking the cancellation of an authorization.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this application'
          type: string
          nullable: true
        description:
          description: 'description of this dossier'
          type: string
          nullable: true
        goal:
          description: 'goal of this dossier'
          type: string
          nullable: true
        expiryDate:
          description: 'The end date of this dossier.'
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Dossier was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Dossier was last Modified'
          type: string
          format: date-time
          nullable: true
        authorization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Authorization-read'
        legal:
          description: 'wheter or not to this Dossier is on legal basis.'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
      required:
        - name
    Dossier-write:
      type: object
      description: 'Dossier is a external data set that is blocking the cancellation of an authorization.'
      required:
        - name
      properties:
        name:
          description: 'Name of this application'
          type: string
          nullable: true
        description:
          description: 'description of this dossier'
          type: string
          nullable: true
        goal:
          description: 'goal of this dossier'
          type: string
          nullable: true
        expiryDate:
          description: 'The end date of this dossier.'
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        authorization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Authorization-write'
        legal:
          description: 'wheter or not to this Dossier is on legal basis.'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
    'Dossier:jsonld-read':
      type: object
      description: 'Dossier is a external data set that is blocking the cancellation of an authorization.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this application'
          type: string
          nullable: true
        description:
          description: 'description of this dossier'
          type: string
          nullable: true
        goal:
          description: 'goal of this dossier'
          type: string
          nullable: true
        expiryDate:
          description: 'The end date of this dossier.'
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Dossier was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Dossier was last Modified'
          type: string
          format: date-time
          nullable: true
        authorization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Authorization:jsonld-read'
        legal:
          description: 'wheter or not to this Dossier is on legal basis.'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
      required:
        - name
    'Dossier:jsonld-write':
      type: object
      description: 'Dossier is a external data set that is blocking the cancellation of an authorization.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this application'
          type: string
          nullable: true
        description:
          description: 'description of this dossier'
          type: string
          nullable: true
        goal:
          description: 'goal of this dossier'
          type: string
          nullable: true
        expiryDate:
          description: 'The end date of this dossier.'
          type: string
          format: date-time
          nullable: true
        sso:
          description: 'A URL with which the user can view this Dossier.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        authorization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Authorization:jsonld-write'
        legal:
          description: 'wheter or not to this Dossier is on legal basis.'
          type: boolean
          nullable: true
        scopes:
          description: 'scopes this authorization has access to'
          type: array
          items:
            type: string
    Group-read:
      type: object
      description: 'An entity representing a group.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this group'
          type: string
        description:
          description: 'description of this group'
          type: string
          nullable: true
        organization:
          description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
          type: string
          nullable: true
        parentGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-read'
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        application:
          $ref: '#/components/schemas/Application-read'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership-read'
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - application
    Group-write:
      type: object
      description: 'An entity representing a group.'
      required:
        - name
        - application
      properties:
        name:
          description: 'Name of this group'
          type: string
        description:
          description: 'description of this group'
          type: string
          nullable: true
        organization:
          description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
          type: string
          nullable: true
        parentGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-write'
        application:
          $ref: '#/components/schemas/Application-write'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership-write'
    'Group:jsonld-read':
      type: object
      description: 'An entity representing a group.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this group'
          type: string
        description:
          description: 'description of this group'
          type: string
          nullable: true
        organization:
          description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
          type: string
          nullable: true
        parentGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-read'
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership:jsonld-read'
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - application
    'Group:jsonld-write':
      type: object
      description: 'An entity representing a group.'
      required:
        - name
        - application
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this group'
          type: string
        description:
          description: 'description of this group'
          type: string
          nullable: true
        organization:
          description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
          type: string
          nullable: true
        parentGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-write'
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership:jsonld-write'
    Membership-read:
      type: object
      description: 'An entity representing a membership.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        userUrl:
          description: 'User uri from user component'
          type: string
        userGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-read'
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedGroup:
          description: 'The moment the invite was accepted by the group'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - userUrl
    Membership-write:
      type: object
      description: 'An entity representing a membership.'
      required:
        - userUrl
      properties:
        userUrl:
          description: 'User uri from user component'
          type: string
        userGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-write'
        dateAcceptedGroup:
          description: 'The moment the invite was accepted by the group'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
    'Membership:jsonld-read':
      type: object
      description: 'An entity representing a membership.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        userUrl:
          description: 'User uri from user component'
          type: string
        userGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-read'
        dateInvited:
          description: 'The moment the invite was send'
          type: string
          format: date-time
          nullable: true
        dateAcceptedGroup:
          description: 'The moment the invite was accepted by the group'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - userUrl
    'Membership:jsonld-write':
      type: object
      description: 'An entity representing a membership.'
      required:
        - userUrl
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        userUrl:
          description: 'User uri from user component'
          type: string
        userGroup:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-write'
        dateAcceptedGroup:
          description: 'The moment the invite was accepted by the group'
          type: string
          format: date-time
          nullable: true
        dateAcceptedUser:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
    Proof-read:
      type: object
      description: 'Proof is a way to prove that claims are correct.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        type:
          description: 'The type of this Proof.'
          type: string
          nullable: true
        proofPurpose:
          description: 'The purpose of this Proof.'
          type: string
          nullable: true
        verificationMethod:
          description: 'The identifier of the public key that can verify the signature.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jws:
          description: 'The digital signature value.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        claim:
          $ref: '#/components/schemas/Claim-read'
        application:
          $ref: '#/components/schemas/Application-read'
    Proof-write:
      type: object
      description: 'Proof is a way to prove that claims are correct.'
      properties:
        type:
          description: 'The type of this Proof.'
          type: string
          nullable: true
        proofPurpose:
          description: 'The purpose of this Proof.'
          type: string
          nullable: true
        verificationMethod:
          description: 'The identifier of the public key that can verify the signature.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jws:
          description: 'The digital signature value.'
          type: string
          nullable: true
        claim:
          $ref: '#/components/schemas/Claim-write'
        application:
          $ref: '#/components/schemas/Application-write'
    'Proof:jsonld-read':
      type: object
      description: 'Proof is a way to prove that claims are correct.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        type:
          description: 'The type of this Proof.'
          type: string
          nullable: true
        proofPurpose:
          description: 'The purpose of this Proof.'
          type: string
          nullable: true
        verificationMethod:
          description: 'The identifier of the public key that can verify the signature.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jws:
          description: 'The digital signature value.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this proof was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this proof was last Modified'
          type: string
          format: date-time
          nullable: true
        claim:
          $ref: '#/components/schemas/Claim:jsonld-read'
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
    'Proof:jsonld-write':
      type: object
      description: 'Proof is a way to prove that claims are correct.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          description: 'The type of this Proof.'
          type: string
          nullable: true
        proofPurpose:
          description: 'The purpose of this Proof.'
          type: string
          nullable: true
        verificationMethod:
          description: 'The identifier of the public key that can verify the signature.'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        jws:
          description: 'The digital signature value.'
          type: string
          nullable: true
        claim:
          $ref: '#/components/schemas/Claim:jsonld-write'
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
    PurposeLimitation-read:
      type: object
      description: 'PurposeLimitation is de purpose limitation of a Authorization.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this PurposeLimitation.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        data:
          description: 'The data of this PurposeLimitation.'
          type: array
          items:
            type: string
          nullable: true
        noticePeriod:
          description: 'The notice period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        expiryPeriod:
          description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        dateCreated:
          description: 'The moment this PurposeLimitation was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this PurposeLimitation was last Modified'
          type: string
          format: date-time
          nullable: true
        authorization:
          $ref: '#/components/schemas/Authorization-read'
      required:
        - name
    PurposeLimitation-write:
      type: object
      description: 'PurposeLimitation is de purpose limitation of a Authorization.'
      required:
        - name
      properties:
        name:
          description: 'The name of this PurposeLimitation.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        data:
          description: 'The data of this PurposeLimitation.'
          type: array
          items:
            type: string
          nullable: true
        noticePeriod:
          description: 'The notice period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        expiryPeriod:
          description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        authorization:
          $ref: '#/components/schemas/Authorization-write'
    'PurposeLimitation:jsonld-read':
      type: object
      description: 'PurposeLimitation is de purpose limitation of a Authorization.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this PurposeLimitation.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        data:
          description: 'The data of this PurposeLimitation.'
          type: array
          items:
            type: string
          nullable: true
        noticePeriod:
          description: 'The notice period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        expiryPeriod:
          description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        dateCreated:
          description: 'The moment this PurposeLimitation was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this PurposeLimitation was last Modified'
          type: string
          format: date-time
          nullable: true
        authorization:
          $ref: '#/components/schemas/Authorization:jsonld-read'
      required:
        - name
    'PurposeLimitation:jsonld-write':
      type: object
      description: 'PurposeLimitation is de purpose limitation of a Authorization.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this PurposeLimitation.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        data:
          description: 'The data of this PurposeLimitation.'
          type: array
          items:
            type: string
          nullable: true
        noticePeriod:
          description: 'The notice period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        expiryPeriod:
          description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
          type: string
          format: duration
          nullable: true
        authorization:
          $ref: '#/components/schemas/Authorization:jsonld-write'
    ScopeRequest-read:
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        scopes:
          description: 'scopes that are requested of the user'
          type: array
          items:
            type: string
        authorization:
          $ref: '#/components/schemas/Authorization-read'
        authorized:
          description: 'whether the user did or did not authorize the request'
          type: boolean
          nullable: true
        dateAuthorized:
          description: 'The moment this request has been authorized'
          type: string
          format: date-time
          nullable: true
    ScopeRequest-write:
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        scopes:
          description: 'scopes that are requested of the user'
          type: array
          items:
            type: string
        authorization:
          $ref: '#/components/schemas/Authorization-write'
        authorized:
          description: 'whether the user did or did not authorize the request'
          type: boolean
          nullable: true
        dateAuthorized:
          description: 'The moment this request has been authorized'
          type: string
          format: date-time
          nullable: true
    'ScopeRequest:jsonld-read':
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        scopes:
          description: 'scopes that are requested of the user'
          type: array
          items:
            type: string
        authorization:
          $ref: '#/components/schemas/Authorization:jsonld-read'
        authorized:
          description: 'whether the user did or did not authorize the request'
          type: boolean
          nullable: true
        dateAuthorized:
          description: 'The moment this request has been authorized'
          type: string
          format: date-time
          nullable: true
    'ScopeRequest:jsonld-write':
      type: object
      description: 'Authorization gives an application access to data in claims.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        scopes:
          description: 'scopes that are requested of the user'
          type: array
          items:
            type: string
        authorization:
          $ref: '#/components/schemas/Authorization:jsonld-write'
        authorized:
          description: 'whether the user did or did not authorize the request'
          type: boolean
          nullable: true
        dateAuthorized:
          description: 'The moment this request has been authorized'
          type: string
          format: date-time
          nullable: true
    Signee-read:
      type: object
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this Signee'
          type: string
        email:
          description: 'E-mail address of this Signee'
          type: string
        phone:
          description: 'Phone number of this Signee'
          type: string
        signed:
          description: 'Denotes if the signee has signed the contract'
          type: boolean
      required:
        - name
        - email
        - phone
        - signed
    Signee-write:
      type: object
      required:
        - name
        - email
        - phone
        - signed
      properties:
        name:
          description: 'Name of this Signee'
          type: string
        email:
          description: 'E-mail address of this Signee'
          type: string
        phone:
          description: 'Phone number of this Signee'
          type: string
        signed:
          description: 'Denotes if the signee has signed the contract'
          type: boolean
    'Signee:jsonld-read':
      type: object
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'Name of this Signee'
          type: string
        email:
          description: 'E-mail address of this Signee'
          type: string
        phone:
          description: 'Phone number of this Signee'
          type: string
        signed:
          description: 'Denotes if the signee has signed the contract'
          type: boolean
      required:
        - name
        - email
        - phone
        - signed
    'Signee:jsonld-write':
      type: object
      required:
        - name
        - email
        - phone
        - signed
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'Name of this Signee'
          type: string
        email:
          description: 'E-mail address of this Signee'
          type: string
        phone:
          description: 'Phone number of this Signee'
          type: string
        signed:
          description: 'Denotes if the signee has signed the contract'
          type: boolean
definitions:
  Application-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of this application'
        type: string
        example: 'stage platform'
      authorizationUrl:
        description: 'authorization url of the application'
        type: string
        example: 'stage platform'
      webhookUrl:
        description: 'webhook url of the application'
        type: string
        example: 'stage platform'
      singleSignOnUrl:
        description: 'single sign on url of the application'
        type: string
        example: 'stage platform'
      secret:
        description: 'Random generated secret for the application'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        maxLength: 255
      testSecret:
        description: 'Random generated secret for the application'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        maxLength: 255
      description:
        description: 'description of this application'
        type: string
        example: 'stage platform description'
      organization:
        description: 'The organization this application belongs to'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      contact:
        description: 'The wrc application linked to this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      notificationEndpoint:
        description: 'The endpoint of this application.'
        type: string
        example: 'https://dev.zuid-drecht.nl/notification'
        format: url
        maxLength: 255
      scopes: []
      sendLists: []
      gdprContact:
        description: 'The gdprContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      technicalContact:
        description: 'The technicalContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      privacyContact:
        description: 'The privacyContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      billingContact:
        description: 'The billingContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      mailgunApiKey:
        description: 'The mailgun api key of this application'
        type: string
        example: 9dja5d6a6dasda-dsadas6azd-dz5dzadzasdd5e45ad5a3g223
      mailgunDomain:
        description: 'The mailgun domain of this application'
        type: string
        example: mail.zuid-drecht.nl
      messageBirdApiKey:
        description: 'The messageBird api key of this application'
        type: string
        example: 9dja5d6a6dasda-dsadas6azd-dz5dzadzasdd5e45ad5a3g223
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      proofs: []
      userGroups: []
    required:
      - name
      - organization
      - contact
  Application-write:
    properties:
      name:
        description: 'Name of this application'
        type: string
        example: 'stage platform'
      authorizationUrl:
        description: 'authorization url of the application'
        type: string
        example: 'stage platform'
      webhookUrl:
        description: 'webhook url of the application'
        type: string
        example: 'stage platform'
      singleSignOnUrl:
        description: 'single sign on url of the application'
        type: string
        example: 'stage platform'
      description:
        description: 'description of this application'
        type: string
        example: 'stage platform description'
      organization:
        description: 'The organization this application belongs to'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      contact:
        description: 'The wrc application linked to this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      notificationEndpoint:
        description: 'The endpoint of this application.'
        type: string
        example: 'https://dev.zuid-drecht.nl/notification'
        format: url
        maxLength: 255
      scopes: []
      sendLists: []
      gdprContact:
        description: 'The gdprContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      technicalContact:
        description: 'The technicalContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      privacyContact:
        description: 'The privacyContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      billingContact:
        description: 'The billingContact of this application'
        type: string
        example: 'https://example.org/organizations/1'
        format: url
      mailgunApiKey:
        description: 'The mailgun api key of this application'
        type: string
        example: 9dja5d6a6dasda-dsadas6azd-dz5dzadzasdd5e45ad5a3g223
      mailgunDomain:
        description: 'The mailgun domain of this application'
        type: string
        example: mail.zuid-drecht.nl
      messageBirdApiKey:
        description: 'The messageBird api key of this application'
        type: string
        example: 9dja5d6a6dasda-dsadas6azd-dz5dzadzasdd5e45ad5a3g223
      proofs: []
      userGroups: []
    required:
      - name
      - organization
      - contact
  Authorization-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      userUrl:
        description: 'The person who makes his data available.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/cc/people/{{uuid}]'
        format: url
        maxLength: 255
      newUser:
        description: 'Indicator whether user is new or not'
        type: string
      scopes:
        description: 'scopes this authorization has access to'
        type: array
      code:
        description: 'Random generated code for authorization'
        type: string
        example: 4Ad9sdDJA4123AS4Ad9sdDJA4123AS
        maxLength: 255
      goal:
        description: 'The goal of this Authorization (what are the data used for).'
        type: string
        example: 'Get email adres for sending news every week'
        maxLength: 255
      startingDate:
        description: 'The date access was obtained to the data of this authorization'
        type: \Datetime
      dateCreated:
        description: 'The moment this authorization was created'
        type: \Datetime
      dateModified:
        description: 'The moment this authorization was last Modified'
        type: \Datetime
      application:
        description: 'The node where this checkin takes place'
        type: \Application
    required:
      - goal
      - application
  Authorization-write:
    properties:
      userUrl:
        description: 'The person who makes his data available.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/cc/people/{{uuid}]'
        format: url
        maxLength: 255
      newUser:
        description: 'Indicator whether user is new or not'
        type: string
      scopes:
        description: 'scopes this authorization has access to'
        type: array
      code:
        description: 'Random generated code for authorization'
        type: string
        example: 4Ad9sdDJA4123AS4Ad9sdDJA4123AS
        maxLength: 255
      goal:
        description: 'The goal of this Authorization (what are the data used for).'
        type: string
        example: 'Get email adres for sending news every week'
        maxLength: 255
      startingDate:
        description: 'The date access was obtained to the data of this authorization'
        type: \Datetime
      application:
        description: 'The node where this checkin takes place'
        type: \Application
      claims: []
      purposeLimitation: []
      dossiers: []
      scopeRequests: []
      authorizationLogs: []
    required:
      - goal
      - application
  AuthorizationLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      status:
        description: 'status of the authorization log'
        type: string
        example: '200'
      goal:
        description: 'goal of the request'
        type: string
        example: 'log in to commonground'
      endpoint:
        description: 'the endpoint used to obtain the information'
        type: string
        example: access_tokens
      dateCreated:
        description: 'The moment this contract was created'
        type: \Datetime
      dateModified:
        description: 'The moment this contract was last Modified'
        type: \Datetime
      authorization:
        description: 'The node where this checkin takes place'
        type: \Authorization
    required:
      - status
      - endpoint
      - authorization
  AuthorizationLog-write:
    properties:
      status:
        description: 'status of the authorization log'
        type: string
        example: '200'
      goal:
        description: 'goal of the request'
        type: string
        example: 'log in to commonground'
      endpoint:
        description: 'the endpoint used to obtain the information'
        type: string
        example: access_tokens
      authorization:
        description: 'The node where this checkin takes place'
        type: \Authorization
    required:
      - status
      - endpoint
      - authorization
  Claim-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      person:
        description: 'The person (Subject) of this Claim.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/cc/people/{{uuid}]'
        format: url
        maxLength: 255
      property:
        description: 'The property of this Claim.'
        type: string
        example: 'Knows (, alumniOf or jobTitle)'
        maxLength: 255
      data:
        description: 'The data (Value) of this Claim.'
        type: array
      token:
        description: 'The jwt token of this Claim.'
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dnZWRJbkFzIjoiYWRtaW4iLCJpYXQiOjE0MjI3Nzk2Mzh9.gzSraSYS8EXBxLN_oWnFSRgCzcmJmMjLiuyu5CSpyHI
        maxLength: 255
      dateCreated:
        description: 'The moment this claim was created'
        type: \Datetime
      dateModified:
        description: 'The moment this claim was last Modified'
        type: \Datetime
      authorizations: []
      proofs: []
    required:
      - person
      - property
      - data
  Claim-write:
    properties:
      person:
        description: 'The person (Subject) of this Claim.'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/cc/people/{{uuid}]'
        format: url
        maxLength: 255
      property:
        description: 'The property of this Claim.'
        type: string
        example: 'Knows (, alumniOf or jobTitle)'
        maxLength: 255
      data:
        description: 'The data (Value) of this Claim.'
        type: array
      token:
        description: 'The jwt token of this Claim.'
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dnZWRJbkFzIjoiYWRtaW4iLCJpYXQiOjE0MjI3Nzk2Mzh9.gzSraSYS8EXBxLN_oWnFSRgCzcmJmMjLiuyu5CSpyHI
        maxLength: 255
      authorizations: []
      proofs: []
    required:
      - person
      - property
      - data
  Contract-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of this contract'
        type: string
        example: 'internship contract'
      description:
        description: 'The description of the contract'
        type: string
        example: 'this is the best contract ever'
      signed:
        description: 'Denotes if the contract is signed'
        type: bool
      expiryDate:
        description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
        type: \DateTime
        example: '2020-11-14'
      noticePeriod:
        description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
        type: \DateInterval
        example: P1M
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      signees:
        description: 'The signees of the contract'
        type: '\Collection|\Signee[]'
    required:
      - name
      - signed
  Contract-write:
    properties:
      name:
        description: 'Name of this contract'
        type: string
        example: 'internship contract'
      description:
        description: 'The description of the contract'
        type: string
        example: 'this is the best contract ever'
      signed:
        description: 'Denotes if the contract is signed'
        type: bool
      expiryDate:
        description: 'The expiration date of the contract. Has to be set if noticePeriod is not.'
        type: \DateTime
        example: '2020-11-14'
      noticePeriod:
        description: 'The notice period for the termination of the contract. Has to be set if expiryDate is not.'
        type: \DateInterval
        example: P1M
      signees:
        description: 'The signees of the contract'
        type: '\Collection|\Signee[]'
    required:
      - name
      - signed
  Dossier-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of this application'
        type: string
        example: 'stage platform'
      description:
        description: 'description of this dossier'
        type: string
        example: 'stage platform description'
      goal:
        description: 'goal of this dossier'
        type: string
        example: 'stage platform description'
      expiryDate:
        description: 'The end date of this dossier.'
        type: \Datetime
        example: '27-10-2020 10:47:00'
      sso:
        description: 'A URL with which the user can view this Dossier.'
        type: string
        example: 'https://dev.id-vault.com/dossiers/x (?)'
        format: url
        maxLength: 255
      dateCreated:
        description: 'The moment this Dossier was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Dossier was last Modified'
        type: \Datetime
      legal:
        description: 'wheter or not to this Dossier is on legal basis.'
        type: bool
        example: 'true'
      scopes:
        description: 'scopes this authorization has access to'
        type: array
      authorization: []
    required:
      - name
  Dossier-write:
    properties:
      name:
        description: 'Name of this application'
        type: string
        example: 'stage platform'
      description:
        description: 'description of this dossier'
        type: string
        example: 'stage platform description'
      goal:
        description: 'goal of this dossier'
        type: string
        example: 'stage platform description'
      expiryDate:
        description: 'The end date of this dossier.'
        type: \Datetime
        example: '27-10-2020 10:47:00'
      sso:
        description: 'A URL with which the user can view this Dossier.'
        type: string
        example: 'https://dev.id-vault.com/dossiers/x (?)'
        format: url
        maxLength: 255
      legal:
        description: 'wheter or not to this Dossier is on legal basis.'
        type: bool
        example: 'true'
      scopes:
        description: 'scopes this authorization has access to'
        type: array
      authorization: []
    required:
      - name
  Group-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'Name of this group'
        type: string
        example: administrators
      description:
        description: 'description of this group'
        type: string
        example: 'group that holds all the administrators'
      organization:
        description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
        type: string
        example: 'https://example.org/organizations/1'
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      parentGroup: []
      childGroups: []
      application: []
      memberships: []
    required:
      - name
      - application
  Group-write:
    properties:
      name:
        description: 'Name of this group'
        type: string
        example: administrators
      description:
        description: 'description of this group'
        type: string
        example: 'group that holds all the administrators'
      organization:
        description: 'The organization linked to this group (uri or string) that can be used to retrieve a organization object'
        type: string
        example: 'https://example.org/organizations/1'
      parentGroup: []
      application: []
      memberships: []
    required:
      - name
      - application
  Membership-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      userUrl:
        description: 'User uri from user component'
        type: string
        example: 'https://example.nl/user'
      dateInvited:
        description: 'The moment the invite was send'
        type: \DateTime
        example: '20190101'
      dateAcceptedGroup:
        description: 'The moment the invite was accepted by the group'
        type: \DateTime
        example: '20190101'
      dateAcceptedUser:
        description: 'The moment the invite was accepted by the user'
        type: \DateTime
        example: '20190101'
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      userGroup: []
    required:
      - userUrl
  Membership-write:
    properties:
      userUrl:
        description: 'User uri from user component'
        type: string
        example: 'https://example.nl/user'
      dateAcceptedGroup:
        description: 'The moment the invite was accepted by the group'
        type: \DateTime
        example: '20190101'
      dateAcceptedUser:
        description: 'The moment the invite was accepted by the user'
        type: \DateTime
        example: '20190101'
      userGroup: []
    required:
      - userUrl
  Proof-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      type:
        description: 'The type of this Proof.'
        type: string
        example: RsaSignature2018
        maxLength: 255
      proofPurpose:
        description: 'The purpose of this Proof.'
        type: string
        example: assertionMethod
        maxLength: 255
      verificationMethod:
        description: 'The identifier of the public key that can verify the signature.'
        type: string
        example: 'https://example.edu/issuers/keys/1'
        format: url
        maxLength: 255
      jws:
        description: 'The digital signature value.'
        type: string
        example: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5XsITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUcX16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtjPAYuNzVBAh4vGHSrQyHUdBBPM
        maxLength: 255
      dateCreated:
        description: 'The moment this proof was created'
        type: \Datetime
      dateModified:
        description: 'The moment this proof was last Modified'
        type: \Datetime
      claim: []
      application: []
    required: []
  Proof-write:
    properties:
      type:
        description: 'The type of this Proof.'
        type: string
        example: RsaSignature2018
        maxLength: 255
      proofPurpose:
        description: 'The purpose of this Proof.'
        type: string
        example: assertionMethod
        maxLength: 255
      verificationMethod:
        description: 'The identifier of the public key that can verify the signature.'
        type: string
        example: 'https://example.edu/issuers/keys/1'
        format: url
        maxLength: 255
      jws:
        description: 'The digital signature value.'
        type: string
        example: eyJhbGciOiJSUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TCYt5XsITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUcX16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtjPAYuNzVBAh4vGHSrQyHUdBBPM
        maxLength: 255
      claim: []
      application: []
    required: []
  PurposeLimitation-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this PurposeLimitation.'
        type: string
        example: PurposeLimitation
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'The PurposeLimitation for Authorization x.'
        maxLength: 255
      data:
        description: 'The data of this PurposeLimitation.'
        type: array
      noticePeriod:
        description: 'The notice period for (the Authorization of) this PurposeLimitation.'
        type: \DateInterval
        example: P3Y6M4DT12H30M5S
      expiryPeriod:
        description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
        type: \DateInterval
        example: P3Y6M4DT12H30M5S
      dateCreated:
        description: 'The moment this PurposeLimitation was created'
        type: \Datetime
      dateModified:
        description: 'The moment this PurposeLimitation was last Modified'
        type: \Datetime
      authorization: []
    required:
      - name
  PurposeLimitation-write:
    properties:
      name:
        description: 'The name of this PurposeLimitation.'
        type: string
        example: PurposeLimitation
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'The PurposeLimitation for Authorization x.'
        maxLength: 255
      data:
        description: 'The data of this PurposeLimitation.'
        type: array
      noticePeriod:
        description: 'The notice period for (the Authorization of) this PurposeLimitation.'
        type: \DateInterval
        example: P3Y6M4DT12H30M5S
      expiryPeriod:
        description: 'The expiry period for (the Authorization of) this PurposeLimitation.'
        type: \DateInterval
        example: P3Y6M4DT12H30M5S
      authorization: []
    required:
      - name
  ScopeRequest-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      scopes:
        description: 'scopes that are requested of the user'
        type: array
      authorized:
        description: 'whether the user did or did not authorize the request'
        type: bool
        example: 'true'
      dateAuthorized:
        description: 'The moment this request has been authorized'
        type: \Datetime
      authorization: []
    required: []
  ScopeRequest-write:
    properties:
      scopes:
        description: 'scopes that are requested of the user'
        type: array
      authorized:
        description: 'whether the user did or did not authorize the request'
        type: bool
        example: 'true'
      dateAuthorized:
        description: 'The moment this request has been authorized'
        type: \Datetime
      authorization: []
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-01-14 12:27:53'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-01-14 12:27:53'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-01-14 12:27:53'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-01-14 12:27:53'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Application
    description: |
      An entity representing an node.
      
      entity that holds the application object for wallet component
  -
    name: Authorization
    description: |
      Authorization gives an application access to data in claims.
      
      
  -
    name: AuthorizationLog
    description: |
      An entity representing an node.
      
      entity to log the uses of authorizations
  -
    name: Claim
    description: |
      Claim is a statement about a Subject (person).
      
      Built on the basis of the subject-property-value relationship (https://w3c.github.io/vc-data-model/#claims).
  -
    name: Contract
    description: |
      An entity representing an node.
      
      entity that holds the contract object for the wallet component
  -
    name: Dossier
    description: |
      Dossier is a external data set that is blocking the cancellation of an authorization.
      
      
  -
    name: Group
    description: |
      An entity representing a group.
      
      entity that holds the groups linked to a application object
  -
    name: Membership
    description: |
      An entity representing a membership.
      
      entity that holds the memeberships linked to groups
  -
    name: Proof
    description: |
      Proof is a way to prove that claims are correct.
      
      
  -
    name: PurposeLimitation
    description: |
      PurposeLimitation is de purpose limitation of a Authorization.
      
      
  -
    name: ScopeRequest
    description: |
      Authorization gives an application access to data in claims.
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: wac.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
